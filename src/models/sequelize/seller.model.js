const { DataTypes } = require('sequelize');
const sequelize = require('../../config/sequelize.config');
const { env } = require('../../config/env.config');
const { makeReadOnly } = require('./utils');

const table = env('TBL_SELLER', 'seller');

const Seller = sequelize.define(table, {
    ID: { type: DataTypes.INTEGER, primaryKey: true, autoIncrement: true },
    AgencyName: { type: DataTypes.STRING(255) },
    MerchantAlias: { type: DataTypes.STRING(100) },
    Name: { type: DataTypes.STRING(100) },
    AmazonSellerID: { type: DataTypes.STRING(100) },
    ProfileId: { type: DataTypes.STRING(100) },
    MarketPlaceID: { type: DataTypes.INTEGER },
    MarketPlaceName: { type: DataTypes.STRING(100) },
    idUserAccount: { type: DataTypes.INTEGER },
    MerchantType: { type: DataTypes.STRING(200) },
    IsActive: { type: DataTypes.TINYINT },
    isAdLostAccess: { type: DataTypes.TINYINT },
    HideFromAdvertisingPlatform: { type: DataTypes.TINYINT },
    ACOSTarget: { type: DataTypes.DECIMAL(10,2) },
    MonthlyBudget: { type: DataTypes.DECIMAL(10,2) },
    DailyBudget: { type: DataTypes.BIGINT },
    MerchantRegion: { type: DataTypes.STRING(150) },
    DashAgencyID: { type: DataTypes.INTEGER },
    pull60DaysReportFlag: { type: DataTypes.TINYINT },
    iRunning60DaysPull: { type: DataTypes.TINYINT },
    dtDataPurgeDate: { type: DataTypes.DATE },
    dtCreatedOn: { type: DataTypes.DATE },
    dtStatusUpdateDate: { type: DataTypes.DATE },
    dtUpdatedOn: { type: DataTypes.DATE },
    iMWS_DataCopyStatus: { type: DataTypes.TINYINT },
    dtMWS_LastCopyStartTime: { type: DataTypes.DATE },
    dtMWS_LastCopyEndTime: { type: DataTypes.DATE },
    iDataCopyStatus: { type: DataTypes.TINYINT },
    dtLastCopyStartTime: { type: DataTypes.DATE },
    dtLastCopyEndTime: { type: DataTypes.DATE },
    iInitialDataCopyStatus: { type: DataTypes.TINYINT },
    dtLastInitialDataCopyStartTime: { type: DataTypes.DATE },
    dtLastInitialDataCopyEndTime: { type: DataTypes.DATE },
    iCurrentMonthArchiveStatus: { type: DataTypes.TINYINT },
    isMwsUser: { type: DataTypes.TINYINT },
    isBrandAnalyticsLostAccess: { type: DataTypes.TINYINT },
    isFinanceLostAccess: { type: DataTypes.TINYINT },
    HideFromMWSPlatform: { type: DataTypes.TINYINT },
    isMwsInitialReportDataPulled: { type: DataTypes.TINYINT },
    isMissingAsinsDataPulled: { type: DataTypes.TINYINT },
    iRunningInitialPull: { type: DataTypes.TINYINT },
    isMwsInventoryInitialDataPulled: { type: DataTypes.TINYINT },
    initialPullAfterLostAccess: { type: DataTypes.TINYINT },
    AmazonMarketplaceId: { type: DataTypes.STRING(100) },
    HasSellerSuspendedListings: { type: DataTypes.INTEGER },
    DefaultCountryCode: { type: DataTypes.STRING(100) },
    DomainName: { type: DataTypes.STRING(150) },
    SalesChannel: { type: DataTypes.STRING(150) },
    DefaultCurrencyCode: { type: DataTypes.STRING(150) },
    DefaultLanguageCode: { type: DataTypes.STRING(100) },
    dtMwsActivatedOn: { type: DataTypes.DATE },
    dtMWSDataPurgeDate: { type: DataTypes.DATE },
    dtMwsDataLastUpdatedOn: { type: DataTypes.DATE },
    dateFromToPullMwsData: { type: DataTypes.DATE },
    dtInventoryDataPulled: { type: DataTypes.DATE },
    isOrderMetricInitialPullVerified: { type: DataTypes.TINYINT },
    isOrderInitialPullVerified: { type: DataTypes.TINYINT },
    iDSPDataCopyStatus: { type: DataTypes.TINYINT },
    dtDSPLastCopyStartTime: { type: DataTypes.DATE },
    dtDSPLastCopyEndTime: { type: DataTypes.DATE },
    isDSPInitialReportDataPulled: { type: DataTypes.TINYINT },
    iRunningDspPull: { type: DataTypes.TINYINT },
    iPriorityFlag: { type: DataTypes.TINYINT },
    priorityFlagUpdatedOn: { type: DataTypes.DATE },
    iMWS_CurrentMonthArchiveStatus: { type: DataTypes.TINYINT },
    isLargeMwsDataMerchant: { type: DataTypes.TINYINT },
    dtLatestRecordDate: { type: DataTypes.DATE },
    dtMWSLatestRecordDate: { type: DataTypes.DATE },
    accessDate: { type: DataTypes.DATE },
    iDataOverwriteFlag: { type: DataTypes.TINYINT },
    isAnalyticsInitialPull: { type: DataTypes.TINYINT },
    isCustomInitialPull: { type: DataTypes.TINYINT },
    isSpApiBackfillPull: { type: DataTypes.TINYINT },
    dtBlankRecordUpdateDate: { type: DataTypes.DATE },
    iBlankBuyerEmailStatus: { type: DataTypes.TINYINT },
    dtForecastLatestDate: { type: DataTypes.DATE },
    iSpApiArchiveStatus: { type: DataTypes.TINYINT },
    dtSpApiLastArchiveStartTime: { type: DataTypes.DATE },
    dtSpApiLastArchiveEndTime: { type: DataTypes.DATE },
    iDeleteSpApiArchiveStatus: { type: DataTypes.TINYINT },
    dtDeleteSpApiArchiveStartTime: { type: DataTypes.DATE },
    dtDeleteSpApiArchiveEndTime: { type: DataTypes.DATE },
    iArchiveStatus: { type: DataTypes.TINYINT },
    dtLastArchiveStartTime: { type: DataTypes.DATE },
    dtLastArchiveEndTime: { type: DataTypes.DATE },
    iDeleteArchiveStatus: { type: DataTypes.TINYINT },
    dtDeleteArchiveStartTime: { type: DataTypes.DATE },
    dtDeleteArchiveEndTime: { type: DataTypes.DATE },
    iCustomUpdateStatus: { type: DataTypes.TINYINT },
    iBrandReportEnabled: { type: DataTypes.SMALLINT },
    isLargeAdvertiser: { type: DataTypes.TINYINT },
    dtCustomUpdateStartTime: { type: DataTypes.DATE },
    dtCustomUpdateEndTime: { type: DataTypes.DATE },
    dtUpdateDspAdvertisers: { type: DataTypes.DATE }
}, {
    tableName: table,
    timestamps: false
});

module.exports = makeReadOnly(Seller);


